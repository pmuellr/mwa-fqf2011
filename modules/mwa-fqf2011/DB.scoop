
/*
 * Copyright (c) 2011 Patrick Mueller
 * Licensed under the MIT license: 
 * http://www.opensource.org/licenses/mit-license.php
 */

//-----------------------------------------------------------------------------
class DB

//=============================================================================

static method getLastPage
    return localStorage.getItem(keyLastPage) || "tools"
    
static method setLastPage(value)
    localStorage.setItem(keyLastPage, value)

//=============================================================================
    
static method getFilters
    return 0xFFFF & (localStorage.getItem(keyFilters) || 0)

static method setFilters(value)
    localStorage.setItem(keyFilters, value)
    
//=============================================================================

static method getAppCacheMessages
    return appCacheMessages.getList().reverse()

static method addAppCacheMessage(message)
    return appCacheMessages.addItem(message)
    
//=============================================================================
    
static method getFavorites
    return favorites.getList()

static method addFavorites(value)
    return favorites.addItem(value)
    
static method removeFavorites(value)
    return favorites.removeItem(value)
    
//=============================================================================
class ListSetting(storageKey)
    this.storageKey = storageKey

//-----------------------------------------------------------------------------
method getList
    try {
        this.list = JSON.parse(localStorage.getItem(this.storageKey))
    }
    catch(e) {
        this.list = []
    }
    
    if (null == this.list) {
        this.list = []
    }
    
    return this.list.slice()

//-----------------------------------------------------------------------------
method _putList
    localStorage.setItem(this.storageKey, JSON.stringify(this.list))
    
//-----------------------------------------------------------------------------
method addItem(item)
    this.getList()
    
    if (_.include(this.list, item)) return this.list.slice()
    
    this.list.push(item)

    this._putList()
    
    return this.list.slice()

//-----------------------------------------------------------------------------
method removeItem(item)
    this.getList()
    
    this.list = _.without(this.list, item)

    this._putList()

    return this.list.slice()

//-----------------------------------------------------------------------------
init
    var prefix = "mwa-fqf2011"
    
    var keyLastPage         = prefix + ".LastPage"
    var keyFavorites        = prefix + ".Favorites"
    var keyAppCacheMessages = prefix + ".AppCacheMessages"
    var keyFilters          = prefix + ".Filters"
    
    var favorites        = new ListSetting(keyFavorites)
    var appCacheMessages = new ListSetting(keyAppCacheMessages)

